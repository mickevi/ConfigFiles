#!/bin/zsh
# load home/work.zsh


# ifall zsh kors utan screen. 
oscreen() {
    precmd () { print -Pn "\e]0;[%n@%M]%# [%~]\a" }
    preexec () { print -Pn "\e]0;[%n@%M]%# [%~] ($1)\a" }

}

medscreen() {
    preexec () {
	local CMD=`echo $1 | cut -d " " -f1`
	echo -ne "\ek${USER//${ME}/jag}@$host:$CMD\e\\"
    }
    precmd() {
	echo -ne "\ek${USER//${ME}/jag}@$host\e\\"
    }
}


if [[ -d /home/mickevi ]] ; then
    source ${HOME}/zsh/home.zsh
else
    source /nfshome/${ME}/zsh/work.zsh
fi
export HISTFILE=~/.zsh_history.${ME}
export HISTSIZE=50000
export SAVEHIST=50000

# fixa inkonsekvens mellan solaris/linux
if [[ "${HOSTNAME}x" == "x" ]] ; then
    HOSTNAME=$HOST
    
fi
# översätt
if [[ ! -z $SSH_CONNECTION ]] ; then
#	local host=${SSH_CONNECTION%\ *}
    local host=$(echo $SSH_CONNECTION | awk '{print $3}')
    if [[ ${host} = [0-9][0-9][0-9]* ]] ; then
	host=$HOST
    fi
    host=${host##*\ }
    host=${host##*\ }
    host=${host%%\.*}
    host=${host#sadb}
    host=${host#vsg}
    host=${host//localhost/lh}
    host=${host//companioncube/cc}
else 
    local host=${HOSTNAME#sadb}
    host=${host#sadb}
    host=${host//localhost/lh}
    host=${host//companioncube/cc}
fi
    



if [[ $TERM == "cygwin"  || $TERM == "vt100" ]] ; then
    print "Changing term from $TERM to xterm"
    export TERM="xterm"
fi

# Set/unset  shell options

bindkey -e                 # emacs key bindings
bindkey ' ' magic-space    # also do history expansion on space


autoload -U compinit compinit
setopt autopushd pushdminus pushdsilent pushdtohome
setopt autocd
setopt cdablevars
setopt ignoreeof
setopt interactivecomments
setopt nobanghist
setopt noclobber
setopt HIST_REDUCE_BLANKS
setopt HIST_IGNORE_SPACE
setopt SH_WORD_SPLIT
setopt nohup

##################################################################
# Stuff to make my life easier

# allow approximate
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# tab completion for PID :D
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always

# cd not select parent dir
zstyle ':completion:*:cd:*' ignore-parents parent pwd

# useful for path editing  backward-delete-word, but with / as additional delimiter
backward-delete-to-slash () {
  local WORDCHARS=${WORDCHARS//\//}
  zle .backward-delete-word
}
zle -N backward-delete-to-slash

##################################################################
# Key bindings
# http://mundy.yazzy.org/unix/zsh.php
# http://www.zsh.org/mla/users/2000/msg00727.html

typeset -g -A key
bindkey '^?' backward-delete-char
bindkey '^[[1~' beginning-of-line
bindkey '^[[5~' up-line-or-history
bindkey '^[[3~' delete-char
bindkey '^[[4~' end-of-line
bindkey '^[[6~' down-line-or-history
bindkey '^[[A' up-line-or-search
bindkey '^[[D' backward-char
bindkey '^[[B' down-line-or-search
bindkey '^[[C' forward-char 
# Detta funkar inte...
bindkey '^[w' backward-delete-to-slash
# completion in the middle of a line
bindkey '^i' expand-or-complete-prefix


# fkappl/wdp
sh_source() {
    emulate -L sh
    source "$@"
  }

if [[ -f $HOME/.alias ]] ; then
        sh_source $HOME/.alias
fi

setprompt () {
	# load some modules
	autoload -U colors zsh/terminfo # Used in the colour alias below
	colors
	setopt prompt_subst

       PROMPT="#[%n@%m]-[%D{%a %y-%m-%d} %*]-[%(?.%{$fg_bold[white]%}.%{$fg_bold[red]%})%?%{$reset_color%}]
#%~%# "
}

setprompt

## Defines

export EDITOR="emacsclient"

# generlla aliases 




unset LC_ALL
export LANG=$MY_LC_LANG
export LC_CTYPE=$MY_LC_LANG
export LC_NUMERIC=$MY_LC
export LC_TIME=$MY_LC
export LC_COLLATE=$MY_LC
export LC_MONETARY=$MY_LC
export LC_MESSAGES=$MY_LC_LANG
export LC_PAPER=$MY_LC
export LC_NAME=$MY_LC
export LC_ADDRESS=$MY_LC
export LC_TELEPHONE=$MY_LC
export LC_MEASUREMENT=$MY_LC
export LC_IDENTIFICATION=$MY_LC 



## OS specific
# Linux
if [[ $(uname) == "Linux" ]] ; then
	alias grep="grep --color"
	alias egrep="egrep --color"       
	alias ls="ls --color=tty -F"
	ediff-emacs() {
	    /usr/bin/emacs --load ${MHOME}/.emacs -geometry 150x65+10+10 -eval "(ediff-files \"$1\" \"$2\")"
	}
fi
