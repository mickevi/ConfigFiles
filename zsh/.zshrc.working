#!/bin/zsh

export HISTFILE=~/.zsh_history
export HISTSIZE=50000
export SAVEHIST=50000

# fixa inkonsekvens mellan solaris/linux
if [[ "${HOSTNAME}x" == "x" ]] ; then
    HOSTNAME=$HOST
fi

# ifall zsh kors utan screen. 
oscreen() {
    precmd () { print -Pn "\e]0;[%n@%M]%# [%~]\a" }
    preexec () { print -Pn "\e]0;[%n@%M]%# [%~] ($1)\a" }

}

medscreen() {
    unset DISPLAY

    preexec () {
	local CMD=`echo $1 | cut -d " " -f1`
	local host=${HOSTNAME#sadb}
	local host=${HOSTNAME#sadb}
	echo -ne "\ek$USER@$host:$CMD\e\\"
    }
    precmd() {
	local host=${HOSTNAME#sadb}
	echo -ne "\ek$USER@$host\e\\"
    }
}

if [[ $TERM == "screen" ]] ; then
    medscreen
elif [[ $TERM == "cygwin" ]] ; then
    export TERM="xterm"
else
    oscreen
fi


# Hosts ( for completion )
hosts=( sadbprodlogin1 sadbsatlogin1 sadbprodwls1 sadbsatwls1 sadburawls sadbsatapp7 sadbverifapp9 sadburaapp5 sadbteknikopa5 sadbprodwlsmgmt1 )

# Set/unset  shell options
setopt   notify globdots correct pushdtohome cdablevars autolist
setopt   correctall autocd recexact longlistjobs
setopt   autoresume histignoredups pushdsilent noclobber
setopt   autopushd pushdminus extendedglob rcquotes mailwarning
unsetopt bgnice autoparamslash


bindkey -e                 # emacs key bindings
bindkey ' ' magic-space    # also do history expansion on space
bindkey '^I' complete-word # complete on tab, leave expansion to _expand



# Setup new style completion system. To see examples of the old style (compctl
# based) programmable completion, check Misc/compctl-examples in the zsh
# distribution.
autoload -U compinit
compinit
# Completion Styles

# list of completers to use
zstyle ':completion:*::::' completer _expand _complete _ignored _approximate

# allow one error for every three characters typed in approximate completer
zstyle -e ':completion:*:approximate:*' max-errors \
    'reply=( $(( ($#PREFIX+$#SUFFIX)/3 )) numeric )'
    
# insert all expansions for expand completer
zstyle ':completion:*:expand:*' tag-order all-expansions

# formatting and messages
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
#zstyle ':completion:*' group-name ''

# match uppercase from lowercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# offer indexes before parameters in subscripts
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters

# command for process lists, the local web server details and host completion
#zstyle ':completion:*:processes' command 'ps -o pid,s,nice,stime,args'
#zstyle ':completion:*:urls' local 'www' '/var/www/htdocs' 'public_html'
zstyle '*' hosts $hosts

# Filename suffixes to ignore during completion (except after rm command)
zstyle ':completion:*:*:(^rm):*:*files' ignored-patterns '*?.o' '*?.c~' \
    '*?.old' '*?.pro'

# ignore completion functions (until the _ignored completer)
zstyle ':completion:*:functions' ignored-patterns '_*'

# fkappl/wdp
sh_source() {
    emulate -L sh
    source "$@"
  }

if [[ -f $HOME/.alias ]] ; then
        sh_source $HOME/.alias
fi
if [[ $USER = wdp[0-9][0-9][0-9]* ]] ; then
        sh_source ~/.profile
fi

setprompt () {
	# load some modules
	autoload -U colors zsh/terminfo # Used in the colour alias below
	colors
	setopt prompt_subst

#   PROMPT="%{$fg[blue]%}[%{$fg_bold[white]%}%~%{$fg[blue]%}]%{$fg_bold[green]%} $ %{$reset_color%} "
	if [[ %? != 0 ]]  ; then
	    ERRCOL="%{$fg_bold[red]%}"
	else
	    ERRCOL="%{$fg[white]%}"
	fi
       PROMPT="[%n@%m]-[%D{%a %y-%m-%d} %*]-[$ERRCOL%?%{$reset_color%}]
%~>"
}

setprompt

## Defines

MHOME=/nfshome/66085217
export EDITOR="emacs"

# generlla aliases 

alias psj="ps -fu $USER | grep java | grep -v grep"
export SVN_REPO=file://${MHOME}/repository

## OS specific
# Linux
if [[ $(uname) == "Linux" ]] ; then
        echo "Using Linux settings"
        export PATH=/usr/bin/:${PATH}:${MHOME}/local-linux/bin:~/bin:${MHOME}/bin:/program/tp/wlstools
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$MHOME/local-linux/lib
        alias ls="ls --color=tty -F"
	alias emacs="/usr/bin/emacs --load /nfshome/66085217/.emacs"
	alias vi="vim -u  /nfshome/66085217/.vimrc"
	alias vim="vim -u  /nfshome/66085217/.vimrc"
	ediff-emacs() {
	    /usr/bin/emacs --load /nfshome/66085217/.emacs -geometry 150x65-10+10 -eval "(ediff-files \"$1\" \"$2\")"
	}
	
	MY_LC_LANG="en_US.iso885915"
	MY_LC="sv_SE.iso885915"

else
# Solaris
        echo "Using Solaris Settings"
	if [[ $TERM == "screen" ]] ; then
	    export TERM=xterm
	fi
        export PATH=${PATH}:${MHOME}/local/bin:~/bin:${MHOME}/bin
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$MHOME/local/lib
	alias ls="ls -F"
	alias emacs="/nfshome/40042817/bin/emacs --load /nfshome/66085217/.emacs"
	MY_LC_LANG="en_US.ISO8859-15"
	MY_LC="sv_SE.ISO8859-15@euro"

	ediff-emacs() {
	    /nfshome/40042817/bin/emacs --load /nfshome/66085217/.emacs -geometry 150x65-10+10 -eval "(ediff-files \"$1\" \"$2\")"
	}
fi


export LANG=$MY_LC_LANG
export LC_CTYPE=$MY_LC_LANG
export LC_NUMERIC=$MY_LC
export LC_TIME=$MY_LC
export LC_COLLATE=$MY_LC
export LC_MONETARY=$MY_LC
export LC_MESSAGES=$MY_LC
export LC_PAPER=$MY_LC
export LC_NAME=$MY_LC
export LC_ADDRESS=$MY_LC
export LC_TELEPHONE=$MY_LC
export LC_MEASUREMENT=$MY_LC
export LC_IDENTIFICATION=$MY_LC 
